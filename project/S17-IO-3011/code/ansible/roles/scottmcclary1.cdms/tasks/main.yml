#- name: Step 1 of 8 -> Fetch CDMS Source Code and Data
#  unarchive:
#    src: https://github.com/cloudmesh/cloudmesh.cdms/archive/master.zip
#    dest: /home/cc
#    remote_src: True

#- name: Step 2 of 8 -> Compile CDMS Source Code
#  shell: source /home/cc/intel/bin/compilervars.sh intel64 && cd /home/cc/cloudmesh.cdms-master/code/trap_analysis && make realclean && make trap_hadoop && make clean && make trap_omp
#  args:
#     executable: /bin/bash

#- name: Step 3 of 8 -> Run CDMS OpenMP Applicaton
#  shell: source /home/cc/intel/bin/compilervars.sh intel64 && ulimit -S -s 120000 && export OMP_STACKSIZE=100M && cd /home/cc/cloudmesh.cdms-master/data && /home/cc/cloudmesh.cdms-master/code/trap_analysis/trap_omp
#  args:
#     executable: /bin/bash

#- name: Step 4 of 8 -> Convert CDMS Data
#  shell: /home/cc/cloudmesh.cdms-master/code/scripts/binary_to_text.sh
#  args:
#     executable: /bin/bash

- name: Step 5 of 8 -> Put CDMS Data in HDFS
  become: true
  become_user: hadoop
  become_method: su
  shell: hadoop fs -mkdir /cdms && hadoop fs -mkdir /cdms/input && hadoop fs -put /home/cc/cloudmesh.cdms-master/data/chA*.txt /cdms/input/
  args:
     executable: /bin/bash

- name: Step 6 of 8 -> Run CDMS Hadoop Application
  become: true
  become_user: hadoop
  become_method: su
  shell: hadoop jar /opt/hadoop-2.7.1/share/hadoop/tools/lib/hadoop-streaming-2.7.1.jar -D mapreduce.input.fileinputformat.split.minsize=7090910 -input /cdms/input -output /cdms/output -mapper /home/cc/cloudmesh.cdms-master/code/trap_analysis/trap_hadoop -reducer /bin/cat
  args:
     executable: /bin/bash

- name: Step 7 of 8 -> Get CDMS Hadoop Output
  become: true
  become_user: hadoop
  become_method: su
  shell: hadoop fs -get /cdms/output/part-00000
  args:
     executable: /bin/bash

- name: Step 8 of 8 -> Clean HDFS
  become: true
  become_user: hadoop
  become_method: su
  shell: hadoop fs -rm /cdms/output/* && hadoop fs -rmdir /cdms/output
  args:
     executable: /bin/bash
