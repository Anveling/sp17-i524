\documentclass[9pt,twocolumn,twoside]{styles/osajnl}
\usepackage{fancyvrb}
\journal{i524} 

\title{\LaTeX\ Linux Containers , Virtulization in Clould Era}

\author[1]{Ashok Vuppada}

\affil[1]{School of Informatics and Computing, Bloomington, IN 47408, U.S.A.}

\affil[*]{Corresponding authors: ashokmadhu66@gmail.com}

\dates{paper-1, \today}

\ociscodes{LXC,Cloud, I524}

% replace this with your url in github/gitlab
\doi{\url{https://github.com/cloudmesh/classes/blob/master/docs/source/format/report/report.pdf}}


\begin{abstract}
In todays world , could is seen as delivery model for growing number
of enterprises as the benefits of agility and efficiencies are better
understood and available. The concept of virtualization is one of the
building blocks for cloud infrastructure and services offering.The
traditional VM work with hardware emulation causing inefficient
resource and storage management. New technology ‘Linux containers’
build with the concept of ‘Operating system Virtualization’ aims at
efficient resource management and customization. 
\end{abstract}

\setboolean{displaycopyright}{true}

\begin{document}

\maketitle

\section{Introduction}

Traditional Virtual machines works with the idea of creating virtual
hardware and running guest operating system on them. Applications are
expected to run on the guest operating system. The hypervisor layer
would control the different guest operating systems.However the
disadvantage of the this set up is each of the guest operating system
would let a kernel process ( memory and cpu manager processes) run on
the host operating system and causing the performance overhead and
resource constrain. It is also noted that each of the guest operating
system runs from the ISO file ( usually in GBs) causing limitations on
the storage of the host. [1] ( Please refer to figure 1)

Container based virtualization works with the similar concept except
eliminating the need of hypervisor layer. Each instance of the guest
operating system can be assumed as any other processes running on the
host system. There would be only one kernel processing running on the
host operating system ( that belong to the host o/s ) and it would
shared with the guest operating systems. The hardware resources ( CPU
and memory ) will also be shared. Since there is single process
controlling the memory and CPU usage is running this model has
performance advantage[1] ( Please refer to figure 1) 

Figure \ref{fig:false-color} figure 1.
\begin{figure}[htbp]
\centering
\fbox{\includegraphics[width=\linewidth]{images/VM.jpg}}
\caption{Architecture Comparison of Hypervisor Based VM and containers.}
\label{fig:false-color}
\end{figure}

\section{Builing Blocks}

 Linux containers are built on the modern kernel features like
‘chroots’ , ‘namespaces’ ,’cgroups’ and Linux security models and
mandatory access controls.[2]
\begin{enumerate}
\item chroot :
its a way of isolating a process to change only defined file
system.The process running inside the chroot jail cannot act on the
file system out side it. this is used to isolate the unstable
applications to hamper the file system in use.[3] 
\item namespaces:
namespaces provides the process level isolation for the global
resources.It helps the process in each of the namespace to believe its
the only process.[2] 
\item cgroups: 
its a kernel feature which allows to
allocate resources to a given group of process(s).it helps one
allocating and accounting CPU time, memory etc for a set of
processes[4]
\item  Linux Security module:
 “Linux Security Modules (LSM) is a
framework that allows the Linux kernel to support a variety of
computer security models while avoiding favoritism toward any single
security implementation”[5] 
\item Mandatory Access control: 
Its is process
by which the security policies setup cannot gets overrides by a
user. [6]
\end{enumerate} 
Linux containers are built kernel features stated , as they are linux
features the contender concept is not available in Microsoft windows. 

\section{Use Cases}

Table \ref{tab:shape-functions} shows an example table.

\begin{table}[htbp]
\centering
\caption{\bf Shape Functions for Quadratic Line Elements}
\begin{tabular}{ccc}
\hline
local node & $\{N\}_m$ & $\{\Phi_i\}_m$ $(i=x,y,z)$ \\
\hline
$m = 1$ & $L_1(2L_1-1)$ & $\Phi_{i1}$ \\
$m = 2$ & $L_2(2L_2-1)$ & $\Phi_{i2}$ \\
$m = 3$ & $L_3=4L_1L_2$ & $\Phi_{i3}$ \\
\hline
\end{tabular}
  \label{tab:shape-functions}
\end{table}

\section{Project LXC AND DOCKER}
Both LXC and Docker are the practical implementations of the linux
containers.  Lxc is the original linux container developed.The project
docker was initially started with the idea of extending lxc but ended
up developing its own container. The key difference between LXC and a
docker is in LXC each virtual container would allow multiple process
to run where as in docker each process would need a separate docker
container.Docker is designed to be stateless and credited for its
portability. Because of the overwhelming popularity of docker it is
often treated as synonym for linux containers .The below diagram
depicts the main structural differences between LXC and docker.[7]

Figure \ref{fig:false-color} figure 2.
\begin{figure}[htbp]
\centering
\fbox{\includegraphics[width=\linewidth]{images/Docker.jpg}}
\caption{Architecture Comparison of LXC and Docker.}
\label{fig:false-color}
\end{figure}

\section{Conclusion} 
In the era of cloud computing and micro services the need and
popularity of containers are gradually growing up.Docker with its
ability of “Build Ship Run” [8] ability made the container concept
more popular and useful.But eventually its not going to replace the
traditional hypervisor based virtual machines any time soon ( as they
are far more superior interns of security and integration compared to
containers). Both the technologies needs to be used in conjunction to
get the better of both the worlds. 


\bibliography{references}
 
\section*{Author Biographies}
\begingroup
\setlength\intextsep{0pt}
\begin{minipage}[t][3.2cm][t]{1.0\columnwidth} % Adjust height [3.2cm] as required for separation of bio photos.
  \begin{wrapfigure}{L}{0.25\columnwidth}
    \includegraphics[width=0.25\columnwidth]{images/john_smith.eps}
  \end{wrapfigure}
  \noindent
  {\bfseries John Smith} received his BSc (Mathematics) in 2000 from
  The University of Maryland. His research interests include lasers
  and optics. 
\end{minipage}
\begin{minipage}[t][3.2cm][t]{1.0\columnwidth} % Adjust height [3.2cm] as required for separation of bio photos.
  \begin{wrapfigure}{L}{0.25\columnwidth}
    \includegraphics[width=0.25\columnwidth]{images/alice_smith.eps}
  \end{wrapfigure}
  \noindent
  {\bfseries Alice Smith} received her BSc (Mathematics) in 2000 from
  The University of Maryland. Her research interests also include
  lasers and optics. 
\end{minipage}
\begin{minipage}[t][3.2cm][t]{1.0\columnwidth} % Adjust height [3.2cm] as required for separation of bio photos.
  \begin{wrapfigure}{L}{0.25\columnwidth}
    \includegraphics[width=0.25\columnwidth]{images/alice_smith.eps}
  \end{wrapfigure}
  \noindent
  {\bfseries Bruce Wayne} received his BSc (Aeronautics) in 2000 from
  Indiana University. His research interests include lasers and optics.
\end{minipage}
\endgroup

\newpage

\appendix

\section{Work Breakdown}

The work on this project was distributed as follows between the
authors:

\begin{description}

\item[John Smith.] Explored the deep mathematical knowledge needed for
  this paper and taught it to the other authors.

\item[Alice Smith.] She explored the world of Oz and was instrumental
  to work on the deployment of hadoop.

\item[Bruce Wayne.] He did not contribute at all to this paper and
  flew around to safe the world.  

\end{description}

\section{Report Checklist}

\begin{itemize}
\renewcommand{\labelitemi}{\scriptsize$\square$} 
\item Have you written the report in word or LaTeX in the specified
  format?
\item Have you included the report in github/lab?
\item Have you specified the names and e-mails of all team members in
  your report. E.g. the username in Canvas?
\item Have you included the HID of all team members?
\item Does the report have the project number added to it?
\item Have you included all images in native and PDF format in gitlab
  in the images folder?
\item Have you added the bibliography file in bibtex format?
\item Have you submitted an additional page that describes who did
  what in the project or report?
\item Have you spellchecked the paper?
\item Have you made sure you do not plagiarize?
\item Have you made sure that the important directories are all lower
  case and have no underscore or space in it?
\item Have you made sure that all authors have a README.rst in their
  HID github/lab repository?
\item Have you made sure that there is a README.rst in the project
  directory and that it is properly filled out?
\item Have you put a work breakdown in the document if you worked in a
  group?
\end{itemize}

\section{Possible technology paper outline}

The next sections are just some suggestions, your may want to add
sections and subsections as you see fit. Images and references do not
count towards the 2 page length. Please use the \verb|\section|,
\verb|\subsection|, and \verb|\subsubsection| commands in your
paper. do not introduce hardcoded numbers. Use the \verb|\ref| and
\verb|\label| commands to refer
 to the sections.


\paragraph{Abstract}

Put in the abstract a summary what this paper is about

\paragraph{1. Introduction}

Introduce the technology and provide general useful information.

\paragraph{2. Architecture} 

If applicable include a description about architectural details. This
may include a figure. Make sure that if you copy a figure you put the
\cite{?} in the caption also. Otherwise it is plagiarism.

\paragraph{2.1. API}

comment on the API which could include language bindings

\paragraph{2.2. Shell Access}

If applicable comment on how the tool can be used from the command line

\paragraph{2.3.Graphical Interface}

If applicable comment on if the technology has a GUI

\paragraph{3. Licensing}

Often tools may have different versions, some fre, some for
pay. Comment on this. For example while a tool may offer a comercial
version this version may be too costly for others. Identify especially
the difference between features for free vs commercial tools.

Sometimes you may need to introduce this also in the introduction as
there may be a big difference and without the knowledge you do not
provide the user an adequate introduction.

\paragraph{4. Ecosystem}

Some technologies have a large ecosystem developed around them with
extensions plugins and other useful tools. Identify if they exists and
comment on what they can achieve

provide potentially a mindmap or a figure illustrating how the
technology fits in with other technologies if applicable.

\paragraph{4. Use Cases}

\paragraph{4.1. Use Cases  for Big Data}

Locate and describe major usecases that demonstrate the technology
while focussing on big data related use cases. Make sure you do proper
references with the \cite{?} command. Do not put URLs in the text.

\paragraph {4.2. Other Use Cases}

Some technologies may not just be used for big data, find other makor
use cases from other areas if applicable.  Make sure you do proper
references with the \cite{?} command. Do not put URLs in the text.

\paragraph{5. Educational material}

Put information here how someone would find out more about the
technology. Use important material and do not list hundrets of web
pages, be selective.

\paragraph{6. Conclusion}

Put in some conclusion based on what you have researched

\paragraph{Acknowledgement}

Put in the information for this class and who may sponsor
you. Examples will be given later

\end{document}
